import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#importing the dataset from the url
df = "https://ontario.ca/v1/files/fuel-prices/pumppricesall.csv"
data = pd.read_csv(df)
#renaming the columns for better understanding
data.columns= ["Date", "Pump Price", "Crude Cost", "Federal Excise Tax", "Federal Carbon Tax", " Ontario Tax", "GST/HST", "Wholesale Margin", "Retail Margin", "Region"]
#counting the number of missing values
na_count = data.isna().sum()
print(na_count) #there are no missing values in the dataset


# Brief overview of Toronto data

toronto_data = data[data["Region"] == "Toronto"]
# Only using data with Toronto region and excluding the date and region columns
toronto_numeric_data = toronto_data.drop(columns=["Date", "Region"])
toronto_mean_values = toronto_numeric_data.mean()
toronto_min_values = toronto_numeric_data.min()
toronto_max_values = toronto_numeric_data.max()
toronto_first_quartile = toronto_numeric_data.quantile(0.25)
toronto_third_quartile = toronto_numeric_data.quantile(0.75)

print("Mean Values: \n", toronto_mean_values, "\n\n", "Min Values: \n", toronto_min_values, "\n\n", "Max Values: \n", toronto_max_values, "\n\n", "First Quartile: \n", toronto_first_quartile, "\n\n", "Third Quartile: \n", toronto_third_quartile)


# Brief descriptive statistics for Toronto data
print("Descriptive Statistics for Toronto Data:")
print(toronto_numeric_data.describe())


# Univariate analysis for Toronto data

# Histogram for each numeric column
toronto_numeric_data.hist(bins=15, figsize=(15, 10))
plt.suptitle('Histograms of Numeric Columns for Toronto Data')
plt.show()

# Boxplot for each numeric column
toronto_numeric_data.plot(kind='box', subplots=True, layout=(3, 3), figsize=(15, 10), title='Boxplots of Numeric Columns for Toronto Data')
plt.suptitle('Boxplots of Numeric Columns for Toronto Data')
plt.show()

# Density plot for each numeric column
toronto_numeric_data.plot(kind='density', subplots=True, layout=(3, 3), figsize=(15, 10), title='Density Plots of Numeric Columns for Toronto Data')
plt.suptitle('Density Plots of Numeric Columns for Toronto Data')
plt.show()


# Bivariate analysis for Toronto data
# Scatter plots for Pump Price vs each numeric column
for column in toronto_numeric_data.columns:
    if column != "Pump Price":
        plt.figure(figsize=(8, 6))
        plt.scatter(toronto_numeric_data[column], toronto_numeric_data["Pump Price"])
        plt.title(f'Pump Price vs {column}')
        plt.xlabel(column)
        plt.ylabel('Pump Price')
        plt.show()

# Correlation matrix
correlation_matrix = toronto_numeric_data.corr()
print("Correlation Matrix:\n", correlation_matrix)

# Heatmap of the correlation matrix
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Heatmap of Correlation Matrix for Toronto Data')
plt.show()

import seaborn as sns